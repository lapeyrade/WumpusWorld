digraph WumpusWorldGraph {

    /* Entities */
    nextMove [label="Turn", shape="circle",]
    checkCell [label="Check Current Cell", shape="rectangle"]
    actionCell [label="Action Current Cell", shape="rectangle"]
    prologMove [label="Move Next Cell", shape="rectangle"]
    
    /* Relationships */
    nextMove -> actionCell
    nextMove -> prologMove
    nextMove -> checkCell

    /* Ranks */
    // rankdir = TB
    rankdir = LR

    subgraph {
        /* Entities */
        stayCell [label="Stay current cell", shape="rectangle"]

        cellBreeze [label="Mark Breeze", shape="rectangle"]
        cellStench [label="Mark Stench", shape="rectangle"]
        cellGold [label="Mark Gold", shape="rectangle"]
        cellPit [label="Mark Pit", shape="rectangle"]
        cellWumpus [label="Mark Wumpus", shape="rectangle"]

        cellSafe [label="Mark Safe", shape="rectangle"]
        nearCellSafe [label="Mark Near Cells Safe", shape="rectangle"]

        checkForPit[label="Check for Pits", shape="rectangle"]
        checkForWumpus[label="Check for Wumpuses", shape="rectangle"]

        markWumpus[label="Mark Cell Wumpus", shape="rectangle"]
        markPit[label="Mark Cell Pit", shape="rectangle"]

        /* Relationships */
        checkCell -> stayCell[label= "Cell = Wall"]
        checkCell -> cellBreeze[label= "Cell = Breeze"]
        checkCell -> cellStench[label= "Cell = Stench"]
        checkCell -> cellGold[label= "Cell = Gold"]
        checkCell -> cellWumpus[label= "Cell = Wumpus"]
        checkCell -> cellPit[label= "Cell = Pit"]
        checkCell -> cellSafe[label= "Cell = Safe"]
        cellSafe -> nearCellSafe[label= "Cell = Safe"]

        checkCell -> checkForWumpus
        checkForWumpus -> markWumpus[label= "Near cell = Stench \n Other Near Cell = Safe"]
        checkCell -> checkForPit
        checkForPit -> markPit[label= "Near cell = Breeze \n Other Near Cell = Safe"] 
    }


    subgraph {
        /* Entities */
        gameOverWin [label="Win", shape="circle", style=filled, fillcolor=green]
        gameOverLose [label="Lose", shape="circle", style=filled, fillcolor=red]
        takeGold [label="Take Gold", shape="rectangle"]
        killWumpus [label="Kill Wumpus", shape="rectangle"]

        /* Relationships */
        actionCell -> gameOverWin [label= "Cell = Start \n All Golds = Found"]
        actionCell -> gameOverLose [label= "Cell = Pit \n Cell = Wumpus"]
        actionCell -> takeGold [label= "Cell = Gold"]
        actionCell -> killWumpus[label= "Near Cell = Wumpus"]
    }

    subgraph {
        /* Entities */
        goBack [label="Go Back to Start Cell", shape="rectangle"]
        goWumpusDead [label="Go To Dead Wumpus Cell", shape="rectangle"]
        goRight [label="Go Right", shape="rectangle"]
        goLeft [label="Go Left", shape="rectangle"]
        goUp [label="Go Up", shape="rectangle"]
        goDown [label="Go Down", shape="rectangle"]
        goBack2 [label="Go Back to Start Cell", shape="rectangle"]

        /* Relationships */
        prologMove -> goBack[label= "Cell != Start \n All golds Found"]
        prologMove -> goWumpusDead[label= "Near Cell = Not Visited & Dead Wumpus"]
        prologMove -> goRight[label= "Right Cell = Not Visited & Safe"]
        prologMove -> goLeft[label= "Left Cell = Not Visited & Safe"]
        prologMove -> goUp[label= "Top Cell = Not Visited & Safe"]
        prologMove -> goDown[label= "Down Cell = Not Visited & Safe"]
        prologMove -> goBack2

        /* Ranks */
        // {rank=same; goUp -> goBack;}
    }
}
